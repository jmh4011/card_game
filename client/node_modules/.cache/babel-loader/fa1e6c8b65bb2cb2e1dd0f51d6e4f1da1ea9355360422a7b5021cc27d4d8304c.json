{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\nexport const modalState = atom({\n  key: 'modalState',\n  default: []\n});\nconst useModal = component => {\n  _s();\n  const [modalElements, setModal] = useRecoilState(modalState);\n  const id = `${component.displayName}-${new Date().getTime()}`;\n  const isOpen = modalElements.some(modal => modal.id === id);\n  const openModal = useCallback(() => {\n    setModal(prev => [...prev, {\n      id,\n      element: component\n    }]);\n    document.body.style.overflow = 'hidden';\n  }, [component, id, setModal]);\n  const closeModal = useCallback(() => {\n    setModal(prev => prev.filter(modal => modal.id !== id));\n    // 모든 모달이 닫혔는지 확인 후 스크롤 해제\n    if (modalElements.length === 1) {\n      document.body.style.overflow = 'unset';\n    }\n  }, [id, modalElements, setModal]);\n  return {\n    isOpen,\n    openModal,\n    closeModal\n  };\n};\n_s(useModal, \"LhzfeIUDbJzjT9Ap8lZ85uMaWfo=\", false, function () {\n  return [useRecoilState];\n});\nexport default useModal;","map":{"version":3,"names":["useCallback","atom","useRecoilState","modalState","key","default","useModal","component","_s","modalElements","setModal","id","displayName","Date","getTime","isOpen","some","modal","openModal","prev","element","document","body","style","overflow","closeModal","filter","length"],"sources":["C:/Users/pipil/file/github/card_game/client/src/components/useModal.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport { atom, useRecoilState } from \"recoil\";\r\n\r\nexport const modalState = atom<{ id: string; element: React.FC }[]>({\r\n  key: 'modalState',\r\n  default: [],\r\n});\r\n\r\nconst useModal = (component: React.FC) => {\r\n  const [modalElements, setModal] = useRecoilState(modalState);\r\n  const id = `${component.displayName}-${new Date().getTime()}`;\r\n\r\n  const isOpen = modalElements.some(modal => modal.id === id);\r\n\r\n  const openModal = useCallback(() => {\r\n    setModal(prev => [...prev, { id, element: component }]);\r\n    document.body.style.overflow = 'hidden';\r\n  }, [component, id, setModal]);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setModal(prev => prev.filter(modal => modal.id !== id));\r\n    // 모든 모달이 닫혔는지 확인 후 스크롤 해제\r\n    if (modalElements.length === 1) {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n  }, [id, modalElements, setModal]);\r\n\r\n  return { isOpen, openModal, closeModal };\r\n};\r\n\r\nexport default useModal;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAkB,OAAO;AAC7C,SAASC,IAAI,EAAEC,cAAc,QAAQ,QAAQ;AAE7C,OAAO,MAAMC,UAAU,GAAGF,IAAI,CAAsC;EAClEG,GAAG,EAAE,YAAY;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAIC,SAAmB,IAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,QAAQ,CAAC,GAAGR,cAAc,CAACC,UAAU,CAAC;EAC5D,MAAMQ,EAAE,GAAI,GAAEJ,SAAS,CAACK,WAAY,IAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAE,EAAC;EAE7D,MAAMC,MAAM,GAAGN,aAAa,CAACO,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKA,EAAE,CAAC;EAE3D,MAAMO,SAAS,GAAGlB,WAAW,CAAC,MAAM;IAClCU,QAAQ,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAER,EAAE;MAAES,OAAO,EAAEb;IAAU,CAAC,CAAC,CAAC;IACvDc,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;EACzC,CAAC,EAAE,CAACjB,SAAS,EAAEI,EAAE,EAAED,QAAQ,CAAC,CAAC;EAE7B,MAAMe,UAAU,GAAGzB,WAAW,CAAC,MAAM;IACnCU,QAAQ,CAACS,IAAI,IAAIA,IAAI,CAACO,MAAM,CAACT,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;IACvD;IACA,IAAIF,aAAa,CAACkB,MAAM,KAAK,CAAC,EAAE;MAC9BN,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,OAAO;IACxC;EACF,CAAC,EAAE,CAACb,EAAE,EAAEF,aAAa,EAAEC,QAAQ,CAAC,CAAC;EAEjC,OAAO;IAAEK,MAAM;IAAEG,SAAS;IAAEO;EAAW,CAAC;AAC1C,CAAC;AAACjB,EAAA,CApBIF,QAAQ;EAAA,QACsBJ,cAAc;AAAA;AAqBlD,eAAeI,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}