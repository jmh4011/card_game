{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useId, useState } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\nexport const modalState = atom({\n  key: 'modalState',\n  default: []\n});\nconst isArrEmpty = arr => arr.length === 0;\nconst useModal = component => {\n  _s();\n  const [modalElements, setModal] = useRecoilState(modalState);\n  // 전역 상태에 element 자체를 상태로 저장한다.\n  const [isOpen, setIsOpen] = useState(false);\n  // 해당 컴포넌트가 열렸는지 안열렸는지 알려주는 상태\n  const id = useId();\n  // 컴포넌트에 id를 부여해서 식별한다.\n\n  const openModal = useCallback(() => {\n    setIsOpen(true);\n    setModal(pre => [...pre, {\n      id: id,\n      element: component\n    }]);\n    // modal을 전역상태에 추가한다\n    document.body.style.overflow = 'hidden';\n    // modal이 open되면 배경의 스크롤을 막아야함\n  }, [component, id, setModal]);\n  const closeModal = useCallback(() => {\n    setIsOpen(false);\n    setModal(pre => pre.filter(c => c.id !== id));\n    // modal을 전역상태에서 제거한다.\n\n    if (isArrEmpty(modalElements)) document.body.style.overflow = 'unset';\n    // modal이 모두 꺼지면 배경의 스크롤이 가능해야함\n  }, [id, modalElements, setModal]);\n  useEffect(() => {\n    setIsOpen(modalElements.some(modal => modal.id === id));\n  }, [modalElements]);\n  return {\n    isOpen,\n    openModal,\n    closeModal\n  };\n};\n_s(useModal, \"QNxreafTXZB1ZwW7Rq0mcmfQg1Y=\", false, function () {\n  return [useRecoilState, useId];\n});\nexport default useModal;","map":{"version":3,"names":["useCallback","useEffect","useId","useState","atom","useRecoilState","modalState","key","default","isArrEmpty","arr","length","useModal","component","_s","modalElements","setModal","isOpen","setIsOpen","id","openModal","pre","element","document","body","style","overflow","closeModal","filter","c","some","modal"],"sources":["C:/Users/pipil/file/github/card_game/client/src/components/useModal.tsx"],"sourcesContent":["import { useCallback, useEffect, useId, useState } from \"react\";\r\nimport { atom, useRecoilState } from \"recoil\";\r\n\r\n\r\nexport const modalState = atom<{ id: string; element: React.FC }[]>({\r\n  key: 'modalState',\r\n  default: [],\r\n});\r\n\r\nconst isArrEmpty = (arr: unknown[]) => arr.length === 0;\r\n\r\nconst useModal = (component: React.FC) => {\r\n  const [modalElements, setModal] = useRecoilState(modalState);\r\n  // 전역 상태에 element 자체를 상태로 저장한다.\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // 해당 컴포넌트가 열렸는지 안열렸는지 알려주는 상태\r\n  const id = useId();\r\n  // 컴포넌트에 id를 부여해서 식별한다.\r\n\r\n  const openModal = useCallback(() => {\r\n    setIsOpen(true);\r\n    setModal((pre) => [...pre, { id: id, element: component }]);\r\n    // modal을 전역상태에 추가한다\r\n    document.body.style.overflow = 'hidden';\r\n    // modal이 open되면 배경의 스크롤을 막아야함\r\n  }, [component, id, setModal]);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setIsOpen(false);\r\n    setModal((pre) => pre.filter((c) => c.id !== id));\r\n    // modal을 전역상태에서 제거한다.\r\n\r\n    if (isArrEmpty(modalElements)) document.body.style.overflow = 'unset';\r\n    // modal이 모두 꺼지면 배경의 스크롤이 가능해야함\r\n  }, [id, modalElements, setModal]);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(modalElements.some(modal => modal.id === id))\r\n  },[modalElements])\r\n\r\n  return { isOpen, openModal, closeModal };\r\n};\r\n\r\nexport default useModal;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,IAAI,EAAEC,cAAc,QAAQ,QAAQ;AAG7C,OAAO,MAAMC,UAAU,GAAGF,IAAI,CAAsC;EAClEG,GAAG,EAAE,YAAY;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAIC,GAAc,IAAKA,GAAG,CAACC,MAAM,KAAK,CAAC;AAEvD,MAAMC,QAAQ,GAAIC,SAAmB,IAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,QAAQ,CAAC,GAAGX,cAAc,CAACC,UAAU,CAAC;EAC5D;EACA,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACA,MAAMgB,EAAE,GAAGjB,KAAK,CAAC,CAAC;EAClB;;EAEA,MAAMkB,SAAS,GAAGpB,WAAW,CAAC,MAAM;IAClCkB,SAAS,CAAC,IAAI,CAAC;IACfF,QAAQ,CAAEK,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAE;MAAEF,EAAE,EAAEA,EAAE;MAAEG,OAAO,EAAET;IAAU,CAAC,CAAC,CAAC;IAC3D;IACAU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;IACvC;EACF,CAAC,EAAE,CAACb,SAAS,EAAEM,EAAE,EAAEH,QAAQ,CAAC,CAAC;EAE7B,MAAMW,UAAU,GAAG3B,WAAW,CAAC,MAAM;IACnCkB,SAAS,CAAC,KAAK,CAAC;IAChBF,QAAQ,CAAEK,GAAG,IAAKA,GAAG,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;IACjD;;IAEA,IAAIV,UAAU,CAACM,aAAa,CAAC,EAAEQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,OAAO;IACrE;EACF,CAAC,EAAE,CAACP,EAAE,EAAEJ,aAAa,EAAEC,QAAQ,CAAC,CAAC;EAEjCf,SAAS,CAAC,MAAM;IACdiB,SAAS,CAACH,aAAa,CAACe,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACZ,EAAE,KAAKA,EAAE,CAAC,CAAC;EACzD,CAAC,EAAC,CAACJ,aAAa,CAAC,CAAC;EAElB,OAAO;IAAEE,MAAM;IAAEG,SAAS;IAAEO;EAAW,CAAC;AAC1C,CAAC;AAACb,EAAA,CA9BIF,QAAQ;EAAA,QACsBP,cAAc,EAIrCH,KAAK;AAAA;AA2BlB,eAAeU,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}