{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useId } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\nexport const modalState = atom({\n  key: 'modalState',\n  default: []\n});\nconst isArrEmpty = arr => arr.length === 0;\nconst useModal = component => {\n  _s();\n  const [modalElements, setModal] = useRecoilState(modalState);\n  // 전역 상태에 element 자체를 상태로 저장한다.\n  const id = useId() + `-${new Date().getTime()}`;\n  // 컴포넌트에 id를 부여해서 식별한다.\n  const isOpen = modalElements.some(modal => modal.id === id);\n  const openModal = () => {\n    setModal(prev => [...prev, {\n      id,\n      element: component\n    }]);\n    document.body.style.overflow = 'hidden';\n  };\n  const closeModal = () => {\n    setModal(prev => prev.filter(modal => modal.id !== id));\n  };\n  useEffect(() => {\n    if (modalElements.length === 0) {\n      document.body.style.overflow = 'unset';\n    }\n  }, [modalElements.length]);\n  return {\n    isOpen,\n    openModal,\n    closeModal\n  };\n};\n_s(useModal, \"SipUjb5nVslYD3LV04tqQSNRBcI=\", false, function () {\n  return [useRecoilState, useId];\n});\nexport default useModal;","map":{"version":3,"names":["useEffect","useId","atom","useRecoilState","modalState","key","default","isArrEmpty","arr","length","useModal","component","_s","modalElements","setModal","id","Date","getTime","isOpen","some","modal","openModal","prev","element","document","body","style","overflow","closeModal","filter"],"sources":["C:/Users/pipil/file/github/card_game/client/src/components/useModal.tsx"],"sourcesContent":["import { useCallback, useEffect, useId, useState } from \"react\";\r\nimport { atom, useRecoilState } from \"recoil\";\r\n\r\n\r\nexport const modalState = atom<{ id: string; element: React.FC }[]>({\r\n  key: 'modalState',\r\n  default: [],\r\n});\r\n\r\nconst isArrEmpty = (arr: unknown[]) => arr.length === 0;\r\n\r\nconst useModal = (component: React.FC) => {\r\n  const [modalElements, setModal] = useRecoilState(modalState);\r\n  // 전역 상태에 element 자체를 상태로 저장한다.\r\n  const id = useId() + `-${new Date().getTime()}`;\r\n  // 컴포넌트에 id를 부여해서 식별한다.\r\n  const isOpen = modalElements.some(modal => modal.id === id);\r\n\r\n  const openModal = () => {\r\n    setModal(prev => [...prev, { id, element: component }]);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModal(prev => prev.filter(modal => modal.id !== id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (modalElements.length === 0) {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n  }, [modalElements.length]);\r\n\r\n  return { isOpen, openModal, closeModal };\r\n};\r\n\r\nexport default useModal;"],"mappings":";AAAA,SAAsBA,SAAS,EAAEC,KAAK,QAAkB,OAAO;AAC/D,SAASC,IAAI,EAAEC,cAAc,QAAQ,QAAQ;AAG7C,OAAO,MAAMC,UAAU,GAAGF,IAAI,CAAsC;EAClEG,GAAG,EAAE,YAAY;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAIC,GAAc,IAAKA,GAAG,CAACC,MAAM,KAAK,CAAC;AAEvD,MAAMC,QAAQ,GAAIC,SAAmB,IAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,QAAQ,CAAC,GAAGX,cAAc,CAACC,UAAU,CAAC;EAC5D;EACA,MAAMW,EAAE,GAAGd,KAAK,CAAC,CAAC,GAAI,IAAG,IAAIe,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAE,EAAC;EAC/C;EACA,MAAMC,MAAM,GAAGL,aAAa,CAACM,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACL,EAAE,KAAKA,EAAE,CAAC;EAE3D,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACtBP,QAAQ,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEP,EAAE;MAAEQ,OAAO,EAAEZ;IAAU,CAAC,CAAC,CAAC;IACvDa,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;EACzC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBd,QAAQ,CAACQ,IAAI,IAAIA,IAAI,CAACO,MAAM,CAACT,KAAK,IAAIA,KAAK,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;EACzD,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,IAAIa,aAAa,CAACJ,MAAM,KAAK,CAAC,EAAE;MAC9Be,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,OAAO;IACxC;EACF,CAAC,EAAE,CAACd,aAAa,CAACJ,MAAM,CAAC,CAAC;EAE1B,OAAO;IAAES,MAAM;IAAEG,SAAS;IAAEO;EAAW,CAAC;AAC1C,CAAC;AAAChB,EAAA,CAvBIF,QAAQ;EAAA,QACsBP,cAAc,EAErCF,KAAK;AAAA;AAsBlB,eAAeS,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}